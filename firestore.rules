// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    function signedIn() {
      return request.auth != null;
    }

    function familyExists(fid) {
      return exists(/databases/$(db)/documents/families/$(fid));
    }

    function isOwner(fid) {
      return signedIn()
        && familyExists(fid)
        && get(/databases/$(db)/documents/families/$(fid)).data.ownerUid == request.auth.uid;
    }

    function isMember(fid) {
      return signedIn()
        && familyExists(fid)
        && (
          (get(/databases/$(db)/documents/families/$(fid)).data.members is map)
          && (request.auth.uid in get(/databases/$(db)/documents/families/$(fid)).data.members.keys())
        );
    }

    // --- Users: sadece kendi belgesi ---
    match /users/{uid} {
      allow read, create, update: if signedIn() && request.auth.uid == uid;
      allow delete: if false;
    }

    // --- Family name reservations ---
    match /family_names/{nameLower} {
      allow get: if signedIn();
      allow list: if false;

      allow create: if signedIn()
        && !exists(/databases/$(db)/documents/family_names/$(nameLower))
        && request.resource.data.ownerUid == request.auth.uid;

      allow delete: if signedIn()
        && resource.data.ownerUid == request.auth.uid;

      allow update: if false;
    }

    // --- Families ---
    match /families/{fid} {

      // Tekil doc erişimi: owner veya üye
      allow get: if isOwner(fid) || isMember(fid);

      // Koleksiyon düzeyi list/query kapalı (güvenlik + maliyet)
      allow list: if false;

      // Create: sadece kendini owner yazarak ve rezerve isimle
      allow create: if signedIn()
        && request.resource.data.ownerUid == request.auth.uid
        && (request.resource.data.members is map)
        && (request.resource.data.members[request.auth.uid] == 'owner')
        && (request.resource.data.nameLower is string)
        && exists(/databases/$(db)/documents/family_names/$(request.resource.data.nameLower))
        && get(/databases/$(db)/documents/family_names/$(request.resource.data.nameLower)).data.ownerUid == request.auth.uid;

      // Update:
      allow update: if
        // 1) owner her şeyi güncelleyebilir
        isOwner(fid)
        ||
        // 2) join: daha önce üye değilse kendini editor/viewer ekleyebilir
        (
          signedIn()
          && familyExists(fid)
          && !(request.auth.uid in (resource.data.members is map ? resource.data.members.keys() : []))
          && (request.resource.data.members is map)
          && (request.resource.data.members[request.auth.uid] in ['editor','viewer'])
        )
        ||
        // 3) Üye: güvenli alanlarla sınırlı
        (
          isMember(fid)
          && request.resource.data.diff(resource.data).changedKeys()
              .hasOnly(['name','nameLower','members','memberNames','inviteCode','updatedAt','createdAt'])
        );

      // Delete: sadece owner
      allow delete: if isOwner(fid);

      // ---- Subcollections ----

      // tasks
      match /tasks/{tid} {
        allow read: if isOwner(fid) || isMember(fid);
        allow create, update, delete: if isOwner(fid) || isMember(fid);
      }

      // weekly  ✅ HATA DÜZELTİLDİ: isFamilyMember(...) yok; aynı mantık kullanılıyor
      match /weekly/{docId} {
        allow read: if isOwner(fid) || isMember(fid);
        allow create, update, delete: if isOwner(fid) || isMember(fid);
      }

      // expenses
      match /expenses/{eid} {
        allow read: if isOwner(fid) || isMember(fid);
        allow create, update, delete: if isOwner(fid) || isMember(fid);
      }

      // items
      match /items/{iid} {
        allow read: if isOwner(fid) || isMember(fid);
        allow create, update, delete: if isOwner(fid) || isMember(fid);
      }

      // diğer alt koleksiyonlar için genel kural
      match /{sub=**}/{docId} {
        allow read: if isOwner(fid) || isMember(fid);
        allow create, update, delete: if isOwner(fid) || isMember(fid);
      }
    }

    // --- Invites ---
    match /invites/{code} {
      // Tekil doc GET serbest; list kapalı
      allow get: if signedIn();
      allow list: if false;

      allow create: if signedIn()
        && request.resource.data.ownerUid == request.auth.uid;

      allow update, delete: if signedIn()
        && request.auth.uid == resource.data.ownerUid;
    }
  }
}